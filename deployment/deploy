#!/usr/bin/env bash
cd $(dirname $(dirname $(readlink -f "$0")))  # Change to ..
ENV="$(pwd)/deployment/.env"
VAR="$(pwd)/var"
VENV="$(pwd)/venv"
VAR_DIRS="$VAR/cache $VAR/logs $VAR/www/static $VAR/www/media/uploads"
DEPLOYED="$VAR/.deployed"
ACTIONS=("celery" "gunicorn" "run" "run-dev" "update")

set -o allexport; source "$ENV"; set +o allexport
[[ -z "$DJCORE_VAR_ROOT" ]] && export DJCORE_VAR_ROOT="$VAR"

_has_command(){ command -v "$1" 2>&1 >/dev/null; }
_permissions(){ sudo chown -R www-data:ubuntu $VAR; sudo chmod -R u=rwX,g=rwsX,o= $VAR; }
_venvup() { { set +x; } 2> /dev/null; echo "+ . $VENV/bin/activate"; . $VENV/bin/activate; set -x; }

self-update(){ git pull && git submodule update; }

update(){
  mkdir -p $VAR_DIRS; _has_command sudo && _permissions
  [[ -d backend/src/ ]] && git -C backend pull && git -C backend submodule update
  _has_command virtualenv && virtualenv "$VENV" || python3 -mvenv "$VENV"
  _venvup
  pip install --upgrade pip setuptools wheel
  [[ -d backend/src/ ]] && pip install -e backend || pip install -e "$DJCORE_GIT_REPO"
  [[ -f backend/requirements.txt ]] && pip install --upgrade -r backend/requirements.txt
  django-admin collectstatic --noinput
  django-admin migrate --noinput
  django-admin setup_skeletons
  _has_command systemctl && sudo systemctl restart production_*
  touch "$DEPLOYED"
}

run(){
  [[ ! -f "$DEPLOYED" ]] && echo "Not deployed" && exit 1
  _venvup && $1 ${@:2}
}

run-dev(){ run django-admin runserver_plus --nopin --pm 0.0.0.0:8000; }
celery(){ run celery $CELERY_CONF ${@:2}; }
gunicorn(){ run gunicorn $GUNICORN_CONF ${@:2}; }

for action in "${ACTIONS[@]}"; do
  [[ "$action" == "$1" ]] && { set -x; $1 "${@:2}"; exit 0; }
done
echo "Invalid action specified: $1" && exit 1
