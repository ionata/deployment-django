version: '3'
volumes: {home:, db:, var:, denv:, venv:, minio1:, minio2:, redis:}
services:
  db:
    environment: ["POSTGRES_USER=django", "POSTGRES_PASSWORD=django"]
    image: "mdillon/postgis:9.6-alpine"
    ports: ["5432:5432"]
    volumes: ["db:/var/lib/postgresql/data"]
  redis:
    image: "redis:3.2-alpine"
    ports: ["6379:6379"]
    volumes: ["redis:/data"]
  minio:
    command: "server /export"
    environment: ["MINIO_ACCESS_KEY=djangos3", "MINIO_SECRET_KEY=djangos3"]
    image: "minio/minio"
    ports: ["9000:9000"]
    volumes: ["minio1:/export", "minio2:/root/.config"]
  backend: &backend
    command: "/bin/true"
    image: "dangerfarms/geodrf-alpine:latest"
    links: ["db", "redis"]
    environment:
      - "DJANGO_SETTINGS_MODULE=dj_core.settings"
      - "DJCORE_APP_NAME=${COMPOSE_PROJECT_NAME}"
      - "DJCORE_DEBUG=1"
      - "DJCORE_SECRET_KEY=super_secret_secret_key"
      - "PYTHONDONTWRITEBYTECODE=nope"
    stdin_open: true
    tty: true
    volumes:
      - "var:/var/www/var"
      - "venv:/var/www/venv"
      - "denv:/var/www/denv"
      - "home:/root"
      - "./deployment:/var/www/deployment"
      - "${PROJECT_ROOT}:/var/www/backend"
  celery:
    <<: *backend
    command: "/var/www/deployment/deploy.py run celery worker -A dj_core -l info -B"
  runserver:
    <<: *backend
    command: "/var/www/deployment/deploy.py run-dev"
    ports: ["8000:8000"]
